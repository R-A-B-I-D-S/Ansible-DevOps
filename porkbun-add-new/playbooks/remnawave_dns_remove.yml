---
- name: üóëÔ∏è –£–¥–∞–ª–∏—Ç—å A-–∑–∞–ø–∏—Å–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ Remnawave –∏–∑ DNS
  hosts: localhost
  gather_facts: no

  vars:
    # –†–∞–±–æ—Ç–∞–µ–º –Ω–∞–ø—Ä—è–º—É—é —Å target_domains ‚Äî —ç—Ç–æ –¥–æ–º–µ–Ω—ã 2-–≥–æ —É—Ä–æ–≤–Ω—è (apex)
    domains_to_process: "{{ target_domains }}"

  tasks:

    # --- –®–ê–ì 1: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–æ–¥ –∏–∑ Remnawave API ---
    - name: üåê –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –Ω–æ–¥—ã –∏–∑ Remnawave
      uri:
        url: "https://{{ remnawave_domain }}/api/nodes"
        method: GET
        headers:
          Authorization: "Bearer {{ remnawave_token }}"
        return_content: yes
        timeout: 30
      register: remnawave_response
      until: remnawave_response.status == 200
      retries: 3
      delay: 5

    - name: ‚ùå –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—à–∏–±–∫—É Remnawave API
      fail:
        msg: "Remnawave API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {{ remnawave_response.json.message | default('Unknown error') }}"
      when: remnawave_response.json is defined and remnawave_response.json.errorCode is defined

    - name: üß© –ò–∑–≤–ª–µ—á—å –≤—Å–µ –Ω–æ–¥—ã
      set_fact:
        all_nodes: "{{ remnawave_response.json.response | list }}"

    - name: üß© –ò–∑–≤–ª–µ—á—å –∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–æ–¥—ã (isNodeOnline == true)
      set_fact:
        active_nodes: >-
          {{
            all_nodes
            | selectattr('isNodeOnline', 'equalto', true)
            | list
          }}

    - name: üß© –ò–∑–≤–ª–µ—á—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–æ–¥—ã (isNodeOnline == false)
      set_fact:
        inactive_nodes: >-
          {{
            all_nodes
            | selectattr('isNodeOnline', 'equalto', false)
            | list
          }}

    - name: üìÑ –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥
      debug:
        msg: |-
          –ê–ö–¢–ò–í–ù–´–ï –ù–û–î–´ ({{ active_nodes | length }} —à—Ç.):
          {% for node in active_nodes %}
          {{ "%2d" % loop.index }}) {{ node.name }} ‚Üí {{ node.address }}
          {% endfor %}
      when: active_nodes | length > 0

    - name: üìÑ –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥
      debug:
        msg: |-
          –ù–ï–ê–ö–¢–ò–í–ù–´–ï –ù–û–î–´ ({{ inactive_nodes | length }} —à—Ç.):
          {% for node in inactive_nodes %}
          {{ "%2d" % loop.index }}) {{ node.name }} ‚Üí {{ node.address }}
          {% endfor %}
      when: inactive_nodes | length > 0

    - name: üü° –ù–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º DNS-–æ–ø–µ—Ä–∞—Ü–∏–∏
      debug:
        msg: "–ù–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ –≤ Remnawave. –ù–∏—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ."
      when: inactive_nodes | length == 0

    # --- –®–ê–ì 2: –î–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–º–µ–Ω–∞ –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ DNS-–∑–∞–ø–∏—Å–∏ ---
    - name: üîç –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ DNS-–∑–∞–ø–∏—Å–∏ –¥–ª—è –¥–æ–º–µ–Ω–∞
      uri:
        url: "https://api.porkbun.com/api/json/v3/dns/retrieve/{{ item }}"
        method: POST
        body:
          apikey: "{{ porkbun_api_key }}"
          secretapikey: "{{ porkbun_secret_api_key }}"
        body_format: json
        return_content: yes
      register: dns_retrieve_results
      ignore_errors: yes
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ item }}"

    # --- –®–ê–ì 3: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—à–∏–±–∫–∏ Porkbun API ---
    - name: ‚ùå –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—à–∏–±–∫—É Porkbun API –¥–ª—è –¥–æ–º–µ–Ω–∞
      fail:
        msg: "Porkbun API error for {{ item }}: {{ result.json.message | default('Unknown') }}"
      when: result.json is defined and result.json.status != "SUCCESS"
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ item }}"
      vars:
        result: "{{ dns_retrieve_results.results | selectattr('item', 'equalto', item) | first }}"

    # --- –®–ê–ì 4: –ù–∞–π—Ç–∏ A-–∑–∞–ø–∏—Å–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º –Ω–æ–¥–∞–º ---
    - name: üß© –ù–∞–π—Ç–∏ A-–∑–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è apex-–¥–æ–º–µ–Ω–∞)
      set_fact:
        records_to_delete_map: >-
          {{
            records_to_delete_map | default({}) | combine({
              item: (
                (
                  (dns_retrieve_results.results | selectattr('item', 'equalto', item) | first | default({}))
                  .json.records | default([])
                )
                | selectattr('type', 'equalto', 'A')
                | selectattr('name', 'equalto', item)  # –¢–æ–ª—å–∫–æ apex-–¥–æ–º–µ–Ω
                | selectattr('content', 'in', inactive_nodes | map(attribute='address') | list)
                | list
              )
            })
          }}
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ item }}"

    # --- –î–ï–ë–ê–ì: –í—ã–≤–µ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è ---
    - name: üêû DEBUG ‚Äî –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
      debug:
        msg: |-
          –î–æ–º–µ–Ω: {{ domain }}
          –ó–∞–ø–∏—Å–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {{ records | length }}
          {% for record in records %}
          {{ "%2d" % loop.index }}) {{ record.name }} ‚Üí {{ record.content }} (ID: {{ record.id }})
          {% endfor %}
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ domain }}"
      vars:
        domain: "{{ item }}"
        records: "{{ records_to_delete_map[domain] | default([]) }}"
      when: records | length > 0

    - name: üü° –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤ –¥–æ–º–µ–Ω–µ
      debug:
        msg: "‚ÑπÔ∏è –í –¥–æ–º–µ–Ω–µ {{ domain }} –Ω–µ—Ç A-–∑–∞–ø–∏—Å–µ–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º –Ω–æ–¥–∞–º"
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ domain }}"
      vars:
        domain: "{{ item }}"
        records: "{{ records_to_delete_map[domain] | default([]) }}"
      when: records | length == 0

    # --- –®–ê–ì 5: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ---
    - name: üõë –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π
      pause:
        prompt: "–ù–∞–π–¥–µ–Ω–æ {{ total_records }} –∑–∞–ø–∏—Å–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è. –í–≤–µ–¥–∏—Ç–µ 'yes' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Ç–º–µ–Ω—ã"
      register: confirmation_pause
      vars:
        total_records: >-
          {% set total = 0 %}
          {% for domain in domains_to_process %}
            {% set records = records_to_delete_map[domain] | default([]) %}
            {% set total = total + records | length %}
          {% endfor %}
          {{ total }}
      when: >-
        {% set any_records = false %}
        {% for domain in domains_to_process %}
          {% if records_to_delete_map[domain] | default([]) | length > 0 %}
            {% set any_records = true %}
          {% endif %}
        {% endfor %}
        {{ any_records }}

    # --- –®–ê–ì 6: –£–¥–∞–ª–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ A-–∑–∞–ø–∏—Å–∏ ---
    - name: üóëÔ∏è –£–¥–∞–ª–∏—Ç—å A-–∑–∞–ø–∏—Å–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥
      uri:
        url: "https://api.porkbun.com/api/json/v3/dns/delete/{{ domain }}/{{ record.id }}"
        method: POST
        body:
          apikey: "{{ porkbun_api_key }}"
          secretapikey: "{{ porkbun_secret_api_key }}"
        body_format: json
        status_code: 200
      register: delete_results
      loop: >-
        {% set result = [] %}
        {% for domain in domains_to_process %}
          {% for record in records_to_delete_map[domain] | default([]) %}
            {% set result = result.append({'domain': domain, 'record': record}) %}
          {% endfor %}
        {% endfor %}
        {{ result }}
      loop_control:
        loop_var: item
        label: "{{ item.domain }} ‚Üí {{ item.record.content }}"

    # --- –®–ê–ì 7: –û—Ç—á–µ—Ç –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ ---
    - name: ‚úÖ –û—Ç—á–µ—Ç –æ–± —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å—è—Ö
      debug:
        msg: |-
          ‚úÖ –£–¥–∞–ª–µ–Ω–æ A-–∑–∞–ø–∏—Å–µ–π –¥–ª—è –¥–æ–º–µ–Ω–∞ {{ domain }}: {{ deleted_count }} —à—Ç.
          {% for del in domain_delete_results %}
          {{ "%2d" % loop.index }}) {{ del.record.name }} ‚Üí {{ del.record.content }}
          {% endfor %}
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ domain }}"
      vars:
        domain_delete_results: >-
          {{
            delete_results.results
            | selectattr('item.domain', 'equalto', item)
            | selectattr('changed', 'true')
            | map(attribute='item')
            | list
          }}
        deleted_count: "{{ domain_delete_results | length }}"
      when: domain_delete_results | length > 0

    # --- –®–ê–ì 8: –û—à–∏–±–∫–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ---
    - name: ‚ö†Ô∏è –û—à–∏–±–∫–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π
      debug:
        msg: |-
          ‚ùå –û—à–∏–±–∫–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–ª—è –¥–æ–º–µ–Ω–∞ {{ domain }}:
          {% for del in domain_delete_errors %}
          {{ "%2d" % loop.index }}) {{ del.record.name }} ‚Üí {{ del.record.content }} ({{ del.delete_result.status }}: {{ del.delete_result.status_text }})
          {% endfor %}
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ domain }}"
      vars:
        domain_delete_errors: >-
          {{
            delete_results.results
            | selectattr('item.domain', 'equalto', item)
            | selectattr('failed', 'true')
            | map(attribute='item')
            | list
          }}
      when: domain_delete_errors | length > 0

    # --- –§–ò–ù–ê–õ: –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ ---
    - name: üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
      debug:
        msg: |-
          
          –û—á–∏—Å—Ç–∫–∞ DNS –æ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.
          
          –í—Å–µ–≥–æ –Ω–æ–¥: {{ all_nodes | length }}
          –ê–∫—Ç–∏–≤–Ω—ã—Ö: {{ active_nodes | length }}
          –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: {{ inactive_nodes | length }}
          
          –¶–µ–ª–µ–≤—ã—Ö –¥–æ–º–µ–Ω–æ–≤: {{ domains_to_process | length }}
          
          {% set total_deleted = 0 %}
          {% for domain in domains_to_process %}
            {% set deleted = (delete_results.results | selectattr('item.domain', 'equalto', domain) | selectattr('changed', 'true') | list) | length %}
            {% set total_deleted = total_deleted + deleted %}
          {% endfor %}
          –£–¥–∞–ª–µ–Ω–æ A-–∑–∞–ø–∏—Å–µ–π: {{ total_deleted }}

      when: true

    - name: üìä –ù–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª—è–ª–æ—Å—å
      debug:
        msg: "‚ÑπÔ∏è –ù–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª—è–ª–æ—Å—å ‚Äî –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ –∏–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏–º A-–∑–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
      when: >-
        {% set any_records = false %}
        {% for domain in domains_to_process %}
          {% if records_to_delete_map[domain] | default([]) | length > 0 %}
            {% set any_records = true %}
          {% endif %}
        {% endfor %}
        not any_records
