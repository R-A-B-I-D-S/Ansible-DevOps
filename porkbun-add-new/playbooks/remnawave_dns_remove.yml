---
- name: 🗑️ Удалить A-записи неактивных нод
  hosts: localhost
  gather_facts: no

  vars:
    domains_to_process: "{{ target_domains }}"

  tasks:
    # --- ШАГ 1: Получить список активных нод ---
    - name: 🌐 Получить активные ноды из Remnawave
      uri:
        url: "https://{{ remnawave_domain }}/api/nodes"
        method: GET
        headers:
          Authorization: "Bearer {{ remnawave_token }}"
        return_content: yes
        timeout: 30
      register: remnawave_response
      until: remnawave_response.status == 200
      retries: 3
      delay: 5

    - name: ❌ Проверить ошибку Remnawave API
      fail:
        msg: "Remnawave API вернул ошибку: {{ remnawave_response.json.message | default('Unknown error') }}"
      when: remnawave_response.json is defined and remnawave_response.json.errorCode is defined

    - name: 🧩 Извлечь активные ноды
      set_fact:
        active_nodes: >-
          {{
            remnawave_response.json.response
            | selectattr('isNodeOnline', 'equalto', true)
            | list
          }}

    - name: 🟡 Нет активных нод — ничего удалять не нужно
      debug:
        msg: "Нет активных нод. Удаление A-записей не требуется."
      when: active_nodes | length == 0

    # --- ШАГ 2: Получить текущие DNS A-записи для доменов ---
    - name: 🔍 Получить все DNS-записи для домена
      uri:
        url: "https://api.porkbun.com/api/json/v3/dns/retrieve/  {{ item }}"
        method: POST
        body:
          apikey: "{{ porkbun_api_key }}"
          secretapikey: "{{ porkbun_secret_api_key }}"
        body_format: json
        return_content: yes
      register: dns_retrieve_results
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ item }}"

    - name: 🧩 Собрать все A-записи по доменам
      set_fact:
        all_a_records: >-
          {{
            all_a_records | default({}) | combine({
              item: (
                (dns_retrieve_results.results | selectattr('item', 'equalto', item) | first).json.records
                | selectattr('type', 'equalto', 'A')
                | selectattr('name', 'equalto', item)
                | list
              )
            })
          }}
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ item }}"

    # --- ШАГ 3: Определить неактивные IP ---
    - name: 🧩 Вычислить IP неактивных нод
      set_fact:
        inactive_ips_map: >-
          {{
            inactive_ips_map | default({}) | combine({
              domain: (
                (all_a_records[domain] | map(attribute='content') | list)
                | difference(active_nodes | map(attribute='address') | list)
              )
            })
          }}
      loop: "{{ domains_to_process }}"
      loop_control:
        loop_var: domain

    - name: 📄 DEBUG — IP неактивных нод
      debug:
        var: inactive_ips_map

    # --- ШАГ 4: Удалить A-записи неактивных нод ---
    - name: 🚫 Удалить A-записи неактивных нод
      uri:
        url: "https://api.porkbun.com/api/json/v3/dns/delete/  {{ domain }}/{{ record.id }}"
        method: POST
        body:
          apikey: "{{ porkbun_api_key }}"
          secretapikey: "{{ porkbun_secret_api_key }}"
        body_format: json
        status_code: 200
      loop: "{{ domains_to_process | product([0]) | list }}"
      loop_control:
        loop_var: domain_pair
      vars:
        domain: "{{ domain_pair[0] }}"
        records_to_delete: >-
          {{
            all_a_records[domain]
            | selectattr('content', 'in', inactive_ips_map[domain])
            | list
          }}
      with_items: "{{ records_to_delete }}"
      loop_control:
        loop_var: record

    - name: ✅ Отчёт об удалении
      debug:
        msg: "Удалена запись {{ record.name }} → {{ record.content }}"
      loop: "{{ domains_to_process | product([0]) | list }}"
      loop_control:
        loop_var: domain_pair
      vars:
        domain: "{{ domain_pair[0] }}"
        records_to_delete: >-
          {{
            all_a_records[domain]
            | selectattr('content', 'in', inactive_ips_map[domain])
            | list
          }}
      with_items: "{{ records_to_delete }}"
      loop_control:
        loop_var: record
