---
- name: üóëÔ∏è –£–¥–∞–ª–∏—Ç—å A-–∑–∞–ø–∏—Å–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥
  hosts: localhost
  gather_facts: no

  vars:
    domains_to_process: "{{ target_domains }}"

  tasks:
    # --- –®–ê–ì 1: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ ---
    - name: üåê –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–æ–¥—ã –∏–∑ Remnawave
      uri:
        url: "https://{{ remnawave_domain }}/api/nodes"
        method: GET
        headers:
          Authorization: "Bearer {{ remnawave_token }}"
        return_content: yes
        timeout: 30
      register: remnawave_response
      until: remnawave_response.status == 200
      retries: 3
      delay: 5

    - name: ‚ùå –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—à–∏–±–∫—É Remnawave API
      fail:
        msg: "Remnawave API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {{ remnawave_response.json.message | default('Unknown error') }}"
      when: remnawave_response.json is defined and remnawave_response.json.errorCode is defined

    - name: üß© –ò–∑–≤–ª–µ—á—å –∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–æ–¥—ã
      set_fact:
        active_nodes: >-
          {{
            remnawave_response.json.response
            | selectattr('isNodeOnline', 'equalto', true)
            | list
          }}

    - name: üü° –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ ‚Äî –Ω–∏—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
      debug:
        msg: "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥. –£–¥–∞–ª–µ–Ω–∏–µ A-–∑–∞–ø–∏—Å–µ–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è."
      when: active_nodes | length == 0

    # --- –®–ê–ì 2: –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ DNS A-–∑–∞–ø–∏—Å–∏ –¥–ª—è –¥–æ–º–µ–Ω–æ–≤ ---
    - name: üîç –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ DNS-–∑–∞–ø–∏—Å–∏ –¥–ª—è –¥–æ–º–µ–Ω–∞
      uri:
        url: "https://api.porkbun.com/api/json/v3/dns/retrieve/{{ item }}"
        method: POST
        body:
          apikey: "{{ porkbun_api_key }}"
          secretapikey: "{{ porkbun_secret_api_key }}"
        body_format: json
        return_content: yes
      register: dns_retrieve_results
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ item }}"

    - name: üß© –°–æ–±—Ä–∞—Ç—å –≤—Å–µ A-–∑–∞–ø–∏—Å–∏ –ø–æ –¥–æ–º–µ–Ω–∞–º
      set_fact:
        all_a_records: >-
          {{
            all_a_records | default({}) | combine({
              item: (
                (dns_retrieve_results.results | selectattr('item', 'equalto', item) | first).json.records
                | selectattr('type', 'equalto', 'A')
                | selectattr('name', 'equalto', item)
                | list
              )
            })
          }}
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ item }}"

    # --- –®–ê–ì 3: –í—ã—á–∏—Å–ª–∏—Ç—å IP –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ ---
    - name: üß© –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ IP
      set_fact:
        inactive_ips_map: >-
          {{
            inactive_ips_map | default({}) | combine({
              domain: (
                (all_a_records[domain] | map(attribute='content') | list)
                | difference(active_nodes | map(attribute='address') | list)
              )
            })
          }}
      loop: "{{ domains_to_process }}"
      loop_control:
        loop_var: domain

    - name: üìÑ DEBUG ‚Äî IP –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥
      debug:
        var: inactive_ips_map

    # --- –®–ê–ì 4: –£–¥–∞–ª–µ–Ω–∏–µ A-–∑–∞–ø–∏—Å–µ–π –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ ---
    - name: üö´ –£–¥–∞–ª–∏—Ç—å A-–∑–∞–ø–∏—Å–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥
      loop: "{{ domains_to_process }}"
      loop_control:
        loop_var: domain
      block:
        - name: üóëÔ∏è –£–¥–∞–ª—è–µ–º A-–∑–∞–ø–∏—Å–∏ –¥–ª—è {{ domain }}
          uri:
            url: "https://api.porkbun.com/api/json/v3/dns/delete/{{ domain }}/{{ record.id }}"
            method: POST
            body:
              apikey: "{{ porkbun_api_key }}"
              secretapikey: "{{ porkbun_secret_api_key }}"
            body_format: json
            status_code: 200
          loop: >-
            {{
              all_a_records[domain]
              | selectattr('content', 'in', inactive_ips_map[domain])
              | list
            }}
          loop_control:
            loop_var: record

        - name: ‚úÖ –õ–æ–≥ —É–¥–∞–ª—ë–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –¥–ª—è {{ domain }}
          debug:
            msg: "–£–¥–∞–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å {{ record.name }} ‚Üí {{ record.content }}"
          loop: >-
            {{
              all_a_records[domain]
              | selectattr('content', 'in', inactive_ips_map[domain])
              | list
            }}
          loop_control:
            loop_var: record

    # --- –§–ò–ù–ê–õ: –°–≤–æ–¥–∫–∞ ---
    - name: üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
      debug:
        msg: |
          –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è A-–∑–∞–ø–∏—Å–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞.
          –ê–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥: {{ active_nodes | length }}
          –¶–µ–ª–µ–≤—ã—Ö –¥–æ–º–µ–Ω–æ–≤: {{ domains_to_process | length }}
