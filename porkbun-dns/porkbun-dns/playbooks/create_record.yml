---
- name: ‚ûï –°–æ–∑–¥–∞—Ç—å A-–∑–∞–ø–∏—Å—å –¥–ª—è —Å—É–±–¥–æ–º–µ–Ω–∞
  hosts: localhost
  gather_facts: no

  tasks:
    - name: üîç –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ DNS-–∑–∞–ø–∏—Å–∏ –∏–∑ Porkbun
      uri:
        url: "https://api.porkbun.com/api/json/v3/dns/retrieve/{{ porkbun_domain }}"
        method: POST
        body:
          apikey: "{{ porkbun_api_key }}"
          secretapikey: "{{ porkbun_secret_api_key }}"
        body_format: json
        return_content: yes
      register: dns_response

    - name: ‚ùå –ü—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ API
      fail:
        msg: "–û—à–∏–±–∫–∞ API Porkbun {{ dns_response.json.status }} ‚Äî {{ dns_response.json.message | default('Unknown error') }}"
      when: dns_response.json is defined and dns_response.json.status != "SUCCESS"

    - name: üß© –ò–∑–≤–ª–µ—á—å –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å A-–∑–∞–ø–∏—Å–∏
      set_fact:
        a_records: >-
          {{
            dns_response.json.records
            | selectattr('type', 'equalto', 'A')
            | sort(attribute='name')
            | list
          }}

    - name: üìÑ –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö A-–∑–∞–ø–∏—Å–µ–π
      debug:
        msg: |-
          –°–ü–ò–°–û–ö A-–ó–ê–ü–ò–°–ï–ô –î–õ–Ø {{ porkbun_domain }}

          {% for record in a_records %}
          {{ "%2d" % loop.index }}) {{ "%-30s" % record.name }} ‚Üí {{ record.content }}
          {% endfor %}
      when: a_records | length > 0

    - name: üü° –ù–µ—Ç A-–∑–∞–ø–∏—Å–µ–π –¥–ª—è –¥–æ–º–µ–Ω–∞
      debug:
        msg: |-
           –ù–ï–¢ A-–ó–ê–ü–ò–°–ï–ô –¥–ª—è –¥–æ–º–µ–Ω–∞ {{ porkbun_domain }}
      when: a_records | length == 0

    - name: üß© –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∏–º—è —Å—É–±–¥–æ–º–µ–Ω–∞
      pause:
        prompt: "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å—É–±–¥–æ–º–µ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, demo) –¥–ª—è –¥–æ–º–µ–Ω–∞ 2-–≥–æ —É—Ä–æ–≤–Ω—è {{ porkbun_domain }}"
      register: subdomain_input

    - name: üß© –ó–∞–ø—Ä–æ—Å–∏—Ç—å IP-–∞–¥—Ä–µ—Å
      pause:
        prompt: "–í–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1.1.1.1)"
      register: target_ip_input

    - name: üß© –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
      set_fact:
        subdomain: "{{ subdomain_input.user_input }}"
        target_ip: "{{ target_ip_input.user_input }}"
        full_subdomain: "{{ subdomain_input.user_input }}.{{ porkbun_domain }}"

    - name: üß© –ù–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ A-–∑–∞–ø–∏—Å–∏ –¥–ª—è —Å—É–±–¥–æ–º–µ–Ω–∞
      set_fact:
        existing_records_by_name: >-
          {{
            (a_records | default([]))
            | selectattr('name', 'equalto', full_subdomain)
            | list
          }}

    - name: üß© –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ IP
      set_fact:
        existing_record_with_same_ip: >-
          {{
            existing_records_by_name
            | selectattr('content', 'equalto', target_ip)
            | list
          }}

    - name: üü° –ó–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ IP —Å–æ–≤–ø–∞–¥–∞–µ—Ç
      debug:
        msg: |-
           –ó–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç {{ full_subdomain }} ‚Üí {{ target_ip }}
           –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
      when: existing_record_with_same_ip | length > 0

    - name: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ => –∑–∞–ø–∏—Å—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å –¥—Ä—É–≥–∏–º–∏ IP
      debug:
        msg: |-
          –í–ù–ò–ú–ê–ù–ò–ï! –î–ª—è {{ full_subdomain }} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç A-–∑–∞–ø–∏—Å–∏

          {% for record in existing_records_by_name %}
          ‚Ä¢ {{ full_subdomain }} ‚Üí {{  record.content }}
          {% endfor %}

          –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω—É –∑–∞–ø–∏—Å—å –¥–ª—è –¥–æ–º–µ–Ω–∞ full_subdomain —Å IP {{ target_ip }}

          –≠—Ç–æ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º A-–∑–∞–ø–∏—Å—è–º (round-robin DNS).
          –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –∑–∞–¥—É–º–∞–Ω–æ.

          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? –í–≤–µ–¥–∏—Ç–µ yes –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
      when: >
          existing_records_by_name | length > 0 and
          existing_record_with_same_ip | length == 0

    - name: üõë –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
      pause:
        prompt: "–í–≤–µ–¥–∏—Ç–µ 'yes' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Ç–º–µ–Ω—ã"
      when: >
          existing_records_by_name | length > 0 and
          existing_record_with_same_ip | length == 0
      register: confirmation_pause

    - name: üöÄ –°–æ–∑–¥–∞—Ç—å A-–∑–∞–ø–∏—Å—å
      uri:
        url: "https://api.porkbun.com/api/json/v3/dns/create/{{ porkbun_domain }}"
        method: POST
        body:
          apikey: "{{ porkbun_api_key }}"
          secretapikey: "{{ porkbun_secret_api_key }}"
          name: "{{ subdomain }}"
          type: A
          content: "{{ target_ip }}"
          ttl: "300"
        body_format: json
        status_code: 200
      register: create_result
      when: existing_record_with_same_ip | length == 0

    - name: ‚úÖ –û—Ç—á—ë—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
      debug:
        msg: >-
          {% if existing_record_with_same_ip | length > 0 %}
          –ó–∞–ø–∏—Å—å {{ full_subdomain }} ‚Üí {{ target_ip }} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∞–∫—Ç—É–∞–ª—å–Ω–∞
          {% elif create_result is defined and create_result.status == 200 %}
          –°–æ–∑–¥–∞–Ω–∞ {{ full_subdomain }} ‚Üí {{ target_ip }}
          {% else %}
          –û—à–∏–±–∫–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å
          {% endif %}
