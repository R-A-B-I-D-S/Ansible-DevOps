---
- name: üßπ –£–¥–∞–ª–∏—Ç—å A-–∑–∞–ø–∏—Å–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ –∏–∑ Porkbun
  hosts: localhost
  gather_facts: no

  vars:
    domains_to_process: "{{ target_domains }}"  # —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤
    remnawave_api_url: "https://{{ remnawave_domain }}/api/nodes"

  tasks:

    # --- –®–ê–ì 1: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–æ–¥ –∏–∑ Remnawave ---
    - name: üåê –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–æ–¥ –∏–∑ Remnawave
      uri:
        url: "{{ remnawave_api_url }}"
        method: GET
        headers:
          Authorization: "Bearer {{ remnawave_token }}"
        return_content: yes
        timeout: 30
      register: remnawave_response
      until: remnawave_response.status == 200
      retries: 3
      delay: 5

    - name: ‚ùå –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—à–∏–±–∫—É Remnawave API
      fail:
        msg: "Remnawave API error: {{ remnawave_response.json.message | default('Unknown error') }}"
      when: remnawave_response.json.errorCode is defined

    - name: üß© –í—ã–¥–µ–ª–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ IP
      set_fact:
        active_ips: >-
          {{
            remnawave_response.json.response
            | selectattr('isNodeOnline', 'equalto', true)
            | map(attribute='address')
            | map('trim')
            | list
            | unique
          }}

    - name: üìä –ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ IP
      debug:
        msg: "–ê–∫—Ç–∏–≤–Ω—ã–µ IP: {{ active_ips }}"

    # --- –®–ê–ì 2: –ü–æ–ª—É—á–∏—Ç—å DNS-–∑–∞–ø–∏—Å–∏ –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤ ---
    - name: üîç –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ DNS-–∑–∞–ø–∏—Å–∏
      uri:
        url: "https://api.porkbun.com/api/json/v3/dns/retrieve/{{ item }}"
        method: POST
        body:
          apikey: "{{ porkbun_api_key }}"
          secretapikey: "{{ porkbun_secret_api_key }}"
        body_format: json
        return_content: yes
      register: dns_results
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ item }}"

    - name: üß© –°–æ–±—Ä–∞—Ç—å –≤—Å–µ A-–∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–º–µ–Ω–∞
      set_fact:
        dns_a_map: >-
          {{
            dns_a_map | default({}) | combine({
              item: (
                (
                  (dns_results.results | selectattr('item', 'equalto', item) | first).json.records
                  | selectattr('type', 'equalto', 'A')
                  | selectattr('name', 'equalto', item)
                  | list
                )
              )
            })
          }}
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ item }}"

    - name: üêû DEBUG ‚Äî dns_a_map (–≤—Å–µ A-–∑–∞–ø–∏—Å–∏)
      debug:
        var: dns_a_map

    # --- –®–ê–ì 3: –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ IP ---
    - name: üß© –ù–∞–π—Ç–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ IP –ø–æ –¥–æ–º–µ–Ω–∞–º
      set_fact:
        inactive_ips_map: >-
          {{
            inactive_ips_map | default({}) | combine({
              domain: (
                (dns_a_map[domain] | map(attribute='content') | map('trim') | list)
                | difference(active_ips)
              )
            })
          }}
      loop: "{{ domains_to_process }}"
      loop_control:
        loop_var: domain
        label: "{{ domain }}"

    - name: üìã –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ IP
      debug:
        msg: |-
          –î–æ–º–µ–Ω: {{ domain }}
          –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ IP: {{ inactive_ips_map[domain] }}
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ domain }}"

    # --- –®–ê–ì 4: –£–¥–∞–ª–∏—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ A-–∑–∞–ø–∏—Å–∏ ---
    - name: üóëÔ∏è –£–¥–∞–ª–∏—Ç—å A-–∑–∞–ø–∏—Å–∏ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏ IP
      vars:
        records_to_delete: "{{ dns_a_map[domain] | selectattr('content', 'in', inactive_ips_map[domain]) | list }}"
      loop: "{{ domains_to_process }}"
      loop_control:
        loop_var: domain
        label: "{{ domain }}"
      when: inactive_ips_map[domain] | length > 0
      block:
        - name: üöÆ –£–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Porkbun API
          uri:
            url: "https://api.porkbun.com/api/json/v3/dns/delete/{{ domain }}/{{ record.id }}"
            method: POST
            body:
              apikey: "{{ porkbun_api_key }}"
              secretapikey: "{{ porkbun_secret_api_key }}"
            body_format: json
            status_code: 200
          loop: "{{ records_to_delete }}"
          loop_control:
            loop_var: record
            label: "{{ domain }} ‚Üí {{ record.content }}"
          register: delete_results

        - name: ‚úÖ –û—Ç—á—ë—Ç –ø–æ —É–¥–∞–ª—ë–Ω–Ω—ã–º –∑–∞–ø–∏—Å—è–º
          debug:
            msg: |-
              ‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ {{ domain }}: {{ delete_results.results | length }}
              {% for rec in delete_results.results %}
              - {{ domain }} ‚Üí {{ rec.item.content }}
              {% endfor %}

    - name: ‚ÑπÔ∏è –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
      debug:
        msg: "–í—Å–µ DNS A-–∑–∞–ø–∏—Å–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∞–∫—Ç–∏–≤–Ω—ã–º –Ω–æ–¥–∞–º ‚Äî —É–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ."
      when: inactive_ips_map | dict2items | map(attribute='value') | map('length') | sum == 0
