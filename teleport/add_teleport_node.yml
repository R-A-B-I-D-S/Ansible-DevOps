- hosts: servers
  become: true
  vars:
      teleport_package_url: "https://cdn.teleport.dev/teleport_17.7.0_amd64.deb"
      teleport_package_path: "/tmp/teleport-17.7.0.deb"
      teleport_invite_token: "{{ hostvars['localhost']['teleport_invite_token'] }}"

  tasks:
      - name: Проверить наличие токена Teleport
        fail:
            msg: "Токен Teleport не найден! Проверьте выполнение предыдущего плейбука"
        when: teleport_invite_token is not defined or teleport_invite_token == ""

      - name: Проверить, что OS семейства Debian/Ubuntu
        assert:
            that: ansible_facts['os_family'] == 'Debian'
            fail_msg: "Установка только для Debian/Ubuntu!"

      - name: Скачать Teleport DEB
        get_url:
            url: "{{ teleport_package_url }}"
            dest: "{{ teleport_package_path }}"
            mode: "0644"

      - name: Установить Teleport
        apt:
            deb: "{{ teleport_package_path }}"
            state: present

      - name: Развернуть teleport.yaml из шаблона
        template:
            src: teleport.yaml.j2
            dest: /etс/teleport.yaml
            owner: root
            group: root
            mode: "0644"
        vars:
            teleport_invite_token: "{{ teleport_invite_token }}"
            teleport_nodename: "{{ inventory_hostname }}"
            teleport_labels:
                role: "{{ server_name | default(inventory_hostname) }}"

      - name: Перечитать systemd
        command: systemctl daemon-reload
        changed_when: false

      - name: Включить и запустить teleport
        systemd:
            name: teleport
            state: restarted
            enabled: yes

      - name: Проверить статус сервиса teleport
        systemd:
            name: teleport
        register: teleport_status

      - name: Показать статус сервиса
        debug:
            msg: "Teleport сервис {{ 'запущен' if teleport_status.status.ActiveState == 'active' else 'не запущен' }}"
