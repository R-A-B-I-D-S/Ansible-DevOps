---
- name: üóëÔ∏è –£–¥–∞–ª–∏—Ç—å A-–∑–∞–ø–∏—Å–∏ –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ Remnawave –∏–∑ DNS Porkbun
  hosts: localhost
  gather_facts: no

  vars:
    domains_to_process: "{{ target_domains }}"

  tasks:

    # --- –®–ê–ì 1: –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–æ–¥—ã –∏–∑ Remnawave API ---
    - name: üåê –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–æ–¥—ã –∏–∑ Remnawave
      uri:
        url: "https://{{ remnawave_domail }}/api/nodes"
        method: GET
        headers:
          Authorization: "Bearer {{ remnawave_token }}"
        return_content: yes
        timeout: 30
      register: remnawave_response
      until: remnawave_response.status == 200
      retries: 3
      delay: 5

    - name: ‚ùå –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—à–∏–±–∫—É Remnawave API
      fail:
        msg: "Remnawave API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {{ remnawave_response.json.message | default('Unknown error') }}"
      when: remnawave_response.json is defined and remnawave_response.json.errorCode is defined

    - name: üß© –ò–∑–≤–ª–µ—á—å –∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–æ–¥—ã (isNodeOnline == true)
      set_fact:
        active_nodes: >-
          {{
            remnawave_response.json.response
            | selectattr('isNodeOnline', 'equalto', true)
            | list
          }}

    - name: üìÑ –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥
      debug:
        msg: |-
          –ê–ö–¢–ò–í–ù–´–ï –ù–û–î–´ ({{ active_nodes | length }} —à—Ç.):
          {% for node in active_nodes %}
          {{ "%2d" % loop.index }}) {{ node.name }} ‚Üí {{ node.address }}
          {% endfor %}
      when: active_nodes | length > 0

    - name: üü° –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º DNS-–æ–ø–µ—Ä–∞—Ü–∏–∏
      debug:
        msg: "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ –≤ Remnawave. –£–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ."
      when: active_nodes | length == 0

    # --- –®–ê–ì 2: –î–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–º–µ–Ω–∞ –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ DNS-–∑–∞–ø–∏—Å–∏ ---
    - name: üîç –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ DNS-–∑–∞–ø–∏—Å–∏ –¥–ª—è –¥–æ–º–µ–Ω–∞
      uri:
        url: "https://api.porkbun.com/api/json/v3/dns/retrieve/{{ item }}"
        method: POST
        body:
          apikey: "{{ porkbun_api_key }}"
          secretapikey: "{{ porkbun_secret_api_key }}"
        body_format: json
        return_content: yes
      register: dns_retrieve_results
      ignore_errors: yes
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ item }}"

    # --- –®–ê–ì 3: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—à–∏–±–∫–∏ Porkbun API ---
    - name: ‚ùå –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—à–∏–±–∫—É Porkbun API –¥–ª—è –¥–æ–º–µ–Ω–∞
      fail:
        msg: "Porkbun API error for {{ item }}: {{ result.json.message | default('Unknown') }}"
      when: result.json is defined and result.json.status != "SUCCESS"
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ item }}"
      vars:
        result: "{{ dns_retrieve_results.results | selectattr('item', 'equalto', item) | first }}"

    # --- –®–ê–ì 4 –ü–æ—Å—Ç—Ä–æ–∏—Ç—å existing_a_records_map ‚Äî –≤—Å–µ A-–∑–∞–ø–∏—Å–∏ apex-–¥–æ–º–µ–Ω–∞ ---
    # --- –®–ê–ì 4: –ü–æ—Å—Ç—Ä–æ–∏—Ç—å existing_a_records_map ‚Äî –≤—Å–µ A-–∑–∞–ø–∏—Å–∏ apex-–¥–æ–º–µ–Ω–∞ ---
    - name: üß© –ü–æ—Å—Ç—Ä–æ–∏—Ç—å existing_a_records_map (—Ç–æ–ª—å–∫–æ A-–∑–∞–ø–∏—Å–∏ –¥–ª—è apex-–¥–æ–º–µ–Ω–∞)
      set_fact:
        existing_a_records_map: >-
          {{
            existing_a_records_map | default({}) | combine({
              item: (
                (
                  (dns_retrieve_results.results | selectattr('item', 'equalto', item) | first | default({}))
                  .json.records | default([])
                )
                | selectattr('type', 'equalto', 'A')
                | selectattr('name', 'equalto', item)
                | map(attribute='content') | map('trim') | list as contents
                | map(attribute='id') | list as ids
                | zip(contents, ids) | map('list') | list
              )
            })
          }}
      loop: "{{ domains_to_process }}"
      loop_control:
        label: "{{ item }}"
      vars:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–ø–∏—Å–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –¥–æ–º–µ–Ω–∞
        domain_records: >-
          {{
            (
              (dns_retrieve_results.results | selectattr('item', 'equalto', item) | first | default({}))
              .json.records | default([])
            )
            | selectattr('type', 'equalto', 'A')
            | selectattr('name', 'equalto', item)
          }}
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–ø–∏—Å–∫–∏ content –∏ id –æ—Ç–¥–µ–ª—å–Ω–æ
        contents: "{{ domain_records | map(attribute='content') | map('trim') | list }}"
        ids: "{{ domain_records | map(attribute='id') | list }}"
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä [content, id]
        paired_records: "{{ contents | zip(ids) | map('list') | list }}"
      set_fact:
        existing_a_records_map: >-
          {{
            existing_a_records_map | default({}) | combine({
              item: paired_records
            })
          }}
    # --- –®–ê–ì 5: –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö IP ---
    - name: üß© –ò–∑–≤–ª–µ—á—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö IP
      set_fact:
        active_ips_set: "{{ active_nodes | map(attribute='address') | map('trim') | list | unique }}"

    # --- –®–ê–ì 6: –î–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–º–µ–Ω–∞ –Ω–∞–π—Ç–∏ –ª–∏—à–Ω–∏–µ –∑–∞–ø–∏—Å–∏ (IP –Ω–µ –≤ active_ips_set) ---
    - name: üß© –ù–∞–π—Ç–∏ –ª–∏—à–Ω–∏–µ A-–∑–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
      set_fact:
        orphaned_records: >-
          {{
            orphaned_records | default({}) | combine({
              domain: (
                existing_a_records_map[domain] | default([])
                | rejectattr(0, 'in', active_ips_set)
                | list
              )
            })
          }}
      loop: "{{ domains_to_process }}"
      loop_control:
        loop_var: domain
      vars:
        active_ips_set: "{{ active_nodes | map(attribute='address') | map('trim') | list | unique }}"

    # --- –î–ï–ë–ê–ì: –í—ã–≤–µ—Å—Ç–∏ orphaned_records ---
    - name: üêû DEBUG ‚Äî orphaned_records (IP ‚Üí ID –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è)
      debug:
        var: orphaned_records

    # --- –®–ê–ì 7: –í—ã–≤–µ—Å—Ç–∏ —Å–≤–æ–¥–∫—É –ø–æ –¥–æ–º–µ–Ω–∞–º ‚Äî —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ ---
    - name: üìÑ –°–≤–æ–¥–∫–∞ –∑–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ –¥–æ–º–µ–Ω–∞–º
      debug:
        msg: |-
          –î–û–ú–ï–ù: {{ domain }}
          –ù–∞–π–¥–µ–Ω–æ –ª–∏—à–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π: {{ count }}
          {% for ip, id in records %}
          ‚Üí {{ ip }} (ID: {{ id }})
          {% endfor %}
      loop: "{{ orphaned_records | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
      vars:
        domain: "{{ item.key }}"
        records: "{{ item.value }}"
        count: "{{ item.value | length }}"

    - name: üõë –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π (–≤–≤–µ–¥–∏—Ç–µ 'yes')
      pause:
        prompt: "‚ö†Ô∏è –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ {{ total_orphaned }} –∑–∞–ø–∏—Å–µ–π. –í–≤–µ–¥–∏—Ç–µ 'yes' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –∏–ª–∏ Ctrl+C –¥–ª—è –æ—Ç–º–µ–Ω—ã"
      register: confirmation
      when: total_orphaned | default(0) | int > 0

    # --- –®–ê–ì 9: –£–¥–∞–ª–∏—Ç—å –ª–∏—à–Ω–∏–µ –∑–∞–ø–∏—Å–∏ —á–µ—Ä–µ–∑ API ---
    - name: üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ª–∏—à–Ω–∏–µ A-–∑–∞–ø–∏—Å–∏
      uri:
        url: "https://api.porkbun.com/api/json/v3/dns/delete/{{ domain }}/{{ item.1 }}"
        method: POST
        body:
          apikey: "{{ porkbun_api_key }}"
          secretapikey: "{{ porkbun_secret_api_key }}"
        body_format: json
        status_code: 200
      loop: "{{ orphaned_records | dict2items | subelements('value') }}"
      loop_control:
        label: "{{ item.0.key }} ‚Üí {{ item.1.0 }} (ID: {{ item.1.1 }})"
      vars:
        domain: "{{ item.0.key }}"
      when: confirmation.user_input | default('no') == 'yes'
      register: delete_results

    # --- –®–ê–ì 10: –û—Ç—á—ë—Ç –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ ---
    - name: ‚úÖ –û—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω—ã–µ —É–¥–∞–ª–µ–Ω–∏—è
      debug:
        msg: "‚úÖ –£–¥–∞–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å: {{ domain }} ‚Üí {{ ip }} (ID: {{ record_id }})"
      loop: "{{ delete_results.results | default([]) }}"
      loop_control:
        label: "{{ item.item.0.key }} ‚Üí {{ item.item.1.0 }}"
      vars:
        domain: "{{ item.item.0.key }}"
        ip: "{{ item.item.1.0 }}"
        record_id: "{{ item.item.1.1 }}"
      when: item is defined and item.status == 200

    - name: ‚ùå –û—Ç—á—ë—Ç –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
      debug:
        msg: "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {{ domain }} ‚Üí {{ ip }} (ID: {{ record_id }}): {{ item.status }} {{ item.status_text }}"
      loop: "{{ delete_results.results | default([]) }}"
      loop_control:
        label: "{{ item.item.0.key }} ‚Üí {{ item.item.1.0 }}"
      vars:
        domain: "{{ item.item.0.key }}"
        ip: "{{ item.item.1.0 }}"
        record_id: "{{ item.item.1.1 }}"
      when: item is defined and item.status != 200

    # --- –§–ò–ù–ê–õ: –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ (—É–º–Ω–∞—è –≤–µ—Ä—Å–∏—è) ---
    - name: üìä –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç ‚Äî —á—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ
      debug:
        msg: |-
          {% set total_deleted = (delete_results.results | default([]) | selectattr('status', 'equalto', 200) | list | length) | int %}
          {% if total_deleted > 0 %}
          ‚úÖ –£–î–ê–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û

          –ê–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥: {{ active_nodes | length }}
          –î–æ–º–µ–Ω–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {{ domains_to_process | length }}
          –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {{ total_deleted }}

          {% else %}
          ‚ÑπÔ∏è –£–î–ê–õ–ï–ù–ò–ï –ù–ï –¢–†–ï–ë–û–í–ê–õ–û–°–¨
          {% if active_nodes | length == 0 %}
          ‚Üí –ê–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.
          {% else %}
          ‚Üí –í—Å–µ A-–∑–∞–ø–∏—Å–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã ‚Äî —É–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ.
          {% endif %}
          {% endif %}
